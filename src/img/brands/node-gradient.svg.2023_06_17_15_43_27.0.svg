<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Uploaded to: SVG Repo, www.svgrepo.com, Generator: SVG Repo Mixer Tools -->

<svg
   fill="#ffffff"
   width="800px"
   height="800px"
   viewBox="0 0 32 32"
   version="1.1"
   id="svg4"
   sodipodi:docname="node-gradient.svg"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <sodipodi:namedview
     id="namedview13"
     pagecolor="#505050"
     bordercolor="#eeeeee"
     borderopacity="1"
     inkscape:showpageshadow="0"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#505050"
     showgrid="false" />
  <defs
     id="defs8">
    <meshgradient
       id="meshgradient973"
       gradientUnits="userSpaceOnUse"
       x="0.54237288"
       y="6">
      <meshrow
         id="meshrow975">
        <meshpatch
           id="meshpatch977">
          <stop
             path="c 10.3333,0  20.6667,0  31,0"
             style="stop-color:#000000;stop-opacity:1"
             id="stop979" />
          <stop
             path="c 0,6.55925  0,13.1185  0,19.6777"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop981" />
          <stop
             path="c -10.3333,0  -20.6667,0  -31,0"
             style="stop-color:#000000;stop-opacity:1"
             id="stop983" />
          <stop
             path="c 0,-6.55925  0,-13.1185  0,-19.6777"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop985" />
        </meshpatch>
      </meshrow>
    </meshgradient>
  </defs>
  <g
     id="path2">
    <path
       style="color:#000000;fill:url(#meshgradient973);stroke-width:0.456;-inkscape-stroke:none"
       d="m 21.843154,6 c -0.157,0 -0.300781,0.1257812 -0.300781,0.3007812 v 5.4960938 l -1.246094,-0.726563 c -0.078,-0.046 -0.165906,-0.06836 -0.253906,-0.06836 -0.088,0 -0.175906,0.02236 -0.253906,0.06836 l -2.994141,1.746094 c -0.156,0.09 -0.251953,0.256547 -0.251953,0.435547 v 3.496094 c 0,0.18 0.09595,0.345547 0.251953,0.435547 l 2.994141,1.746094 c 0.078,0.046 0.165906,0.06836 0.253906,0.06836 0.088,0 0.175906,-0.02236 0.253906,-0.06836 l 2.994141,-1.746094 c 0.156,-0.09 0.251953,-0.256547 0.251953,-0.435547 V 15 13.251953 7.2304688 c 0,-0.178 -0.09505,-0.3416407 -0.248047,-0.4316407 L 21.991592,6.0410156 C 21.942592,6.0130156 21.893154,6 21.843154,6 Z m -9.800781,5.001953 c -0.08775,0 -0.175406,0.02286 -0.253906,0.06836 l -2.994141,1.746094 c -0.156,0.09 -0.2519531,0.256547 -0.2519531,0.435547 v 3.496094 c 0,0.18 0.095953,0.345547 0.2519531,0.435547 l 2.994141,1.746094 c 0.157,0.091 0.350812,0.091 0.507812,0 l 2.994141,-1.746094 c 0.156,-0.09 0.251953,-0.256547 0.251953,-0.435547 v -3.496094 c 0,-0.18 -0.09595,-0.345547 -0.251953,-0.435547 l -2.994141,-1.746094 c -0.0785,-0.0455 -0.166156,-0.06836 -0.253906,-0.06836 z m 16,0 c -0.088,0 -0.175906,0.02236 -0.253906,0.06836 l -2.994141,1.746094 c -0.156,0.09 -0.251953,0.256547 -0.251953,0.435547 v 3.496094 c 0,0.18 0.09595,0.345547 0.251953,0.435547 l 2.904297,1.755859 c 0.156,0.095 0.351766,0.09591 0.509766,0.0039 l 1.427734,-0.830078 c 0.148,-0.085 0.149,-0.299719 0,-0.386719 l -3.09375,-1.822265 V 14.10937 l 1.5,-0.873047 1.5,0.873047 v 1.25 c 0,0.167 0.140375,0.192719 0.234375,0.136719 0.378,-0.222 1.517578,-0.882813 1.517578,-0.882813 0.153,-0.089 0.248047,-0.25364 0.248047,-0.43164 v -0.929688 c 0,-0.18 -0.09595,-0.345547 -0.251953,-0.435547 l -2.994141,-1.746094 c -0.079,-0.046 -0.165906,-0.06836 -0.253906,-0.06836 z m -24.0000001,0.002 c -0.088,0 -0.1759063,0.02236 -0.2539062,0.06836 l -2.9941407,1.74414 c -0.15599999,0.091 -0.25195312,0.2575 -0.25195312,0.4375 v 4.462891 c 0,0.218 0.23582812,0.353141 0.42382812,0.244141 L 2.294326,17.1875 c 0.153,-0.09 0.2480469,-0.253641 0.2480469,-0.431641 v -2.642578 l 1.5,-0.875 1.5,0.875 v 2.642578 c 0,0.178 0.095047,0.341641 0.2480469,0.431641 l 1.328125,0.773438 c 0.188,0.11 0.4238281,-0.02614 0.4238281,-0.244141 v -4.462891 c 0,-0.18 -0.095953,-0.3465 -0.2519531,-0.4375 l -2.9941407,-1.74414 c -0.078,-0.046 -0.1659062,-0.06836 -0.2539062,-0.06836 z m 16.0000001,2.232422 1.5,0.875 V 15 15.888672 l -1.5,0.875 -1.5,-0.875 v -1.777344 z m 8,0.767578 -0.857422,0.5 V 15.502 L 28.042373,16 28.899795,15.501953 v -0.998047 z m -12.09375,3.994141 c -0.102875,0 -0.206875,0.02517 -0.296875,0.07617 l -2.8125,1.625 c -0.185,0.102 -0.296875,0.302719 -0.296875,0.511719 v 3.246093 c 0,0.209 0.116875,0.405719 0.296875,0.511719 l 0.740234,0.421875 c 0.355,0.175 0.485485,0.175781 0.646485,0.175781 0.53,0 0.832031,-0.316953 0.832031,-0.876953 v -3.207031 c 0,-0.049 -0.03803,-0.08398 -0.08203,-0.08398 h -0.355469 c -0.049,0 -0.08398,0.03998 -0.08398,0.08398 v 3.207031 c 0,0.243 -0.256782,0.492203 -0.675782,0.283203 l -0.769531,-0.443359 c -0.025,-0.015 -0.04297,-0.04522 -0.04297,-0.07422 v -3.246094 c 0,-0.029 0.01397,-0.06312 0.04297,-0.07813 l 2.8125,-1.621093 c 0.03,-0.015 0.06389,-0.015 0.08789,0 l 2.814453,1.621093 c 0.029,0.015 0.04297,0.04412 0.04297,0.07813 v 3.246094 c 0,0.034 -0.01897,0.06312 -0.04297,0.07813 l -2.814453,1.626953 c -0.025,0.015 -0.06389,0.015 -0.08789,0 l -0.71875,-0.427734 c -0.019,-0.01 -0.04936,-0.01586 -0.06836,-0.0059 -0.199,0.117001 -0.238828,0.132313 -0.423828,0.195313 -0.049,0.015 -0.11561,0.04505 0.02539,0.123047 l 0.933594,0.554687 c 0.093,0.049 0.194875,0.07813 0.296875,0.07813 0.107,0 0.210969,-0.02903 0.292969,-0.08203 l 2.8125,-1.626953 c 0.185,-0.102 0.296875,-0.302719 0.296875,-0.511719 v -3.246093 c 0,-0.209 -0.116875,-0.404719 -0.296875,-0.511719 l -2.8125,-1.625 c -0.0875,-0.051 -0.190094,-0.07617 -0.292969,-0.07617 z m 4.386719,1.498047 c -0.287,0 -0.539063,0.232062 -0.539063,0.539062 0,0.297 0.242063,0.541016 0.539063,0.541016 0.297,0 0.539062,-0.244016 0.539062,-0.541016 0,-0.307 -0.247062,-0.544062 -0.539062,-0.539062 z m -0.0059,0.08594 c 0.254,0 0.458985,0.200125 0.458985,0.453125 0,0.248 -0.205985,0.452985 -0.458985,0.458985 -0.249,0 -0.451171,-0.205985 -0.451171,-0.458985 0,-0.253 0.203171,-0.453125 0.451171,-0.453125 z m -0.197265,0.146485 v 0.607422 h 0.115234 V 20.09375 h 0.107422 c 0.044,0 0.05445,0.01873 0.06445,0.05273 0,0.005 0.01844,0.162407 0.02344,0.191407 h 0.125 c -0.014,-0.029 -0.0243,-0.11211 -0.0293,-0.16211 -0.014,-0.078 -0.01856,-0.131719 -0.101563,-0.136719 0.044,-0.015 0.117188,-0.03839 0.117188,-0.15039 0,-0.161 -0.139891,-0.160156 -0.212891,-0.160156 z m 0.115234,0.09766 h 0.09766 c 0.03,0 0.08789,-9.69e-4 0.08789,0.08203 0,0.034 -0.01475,0.08889 -0.09375,0.08789 h -0.0918 z m -3.544922,0.496094 c -0.803,0 -1.279297,0.34225 -1.279297,0.90625 0,0.618 0.477094,0.783328 1.246094,0.861328 0.92,0.092 0.992188,0.224297 0.992188,0.404297 0,0.316 -0.253657,0.447265 -0.847657,0.447265 -0.745,0 -0.90889,-0.184687 -0.96289,-0.554687 -0.005,-0.039 -0.03999,-0.06836 -0.08399,-0.06836 h -0.365234 c -0.044,0 -0.08203,0.03498 -0.08203,0.08398 0,0.472 0.257281,1.037109 1.488281,1.037109 0.903,-0.001 1.414063,-0.350844 1.414063,-0.964844 0,-0.608 -0.409391,-0.769718 -1.275391,-0.886718 -0.876,-0.117 -0.962891,-0.17586 -0.962891,-0.38086 0,-0.17 0.07175,-0.392578 0.71875,-0.392578 0.579,0 0.794813,0.126625 0.882813,0.515625 0.01,0.039 0.03717,0.0625 0.07617,0.0625 h 0.365234 c 0.024,0 0.04459,-0.0094 0.05859,-0.02344 0.015,-0.019 0.02453,-0.0385 0.01953,-0.0625 -0.058,-0.672 -0.501344,-0.984375 -1.402344,-0.984375 z"
       id="path948" />
    <path
       style="fill:#999999;color:#000000;"
       d="m 21.84375,5.7714844 c -0.278775,0 -0.529297,0.2294131 -0.529297,0.5292968 v 5.0996098 l -0.904297,-0.527344 c -0.114285,-0.06697 -0.24119,-0.09961 -0.367187,-0.09961 -0.126622,0 -0.256377,0.03195 -0.371094,0.09961 l -2.992188,1.746094 c -0.226406,0.130619 -0.365234,0.372333 -0.365234,0.632812 v 3.496094 c 0,0.261024 0.139457,0.502558 0.365234,0.632812 l 2.992188,1.746094 c 0.114717,0.06765 0.244472,0.09961 0.371094,0.09961 0.126621,0 0.254423,-0.03195 0.36914,-0.09961 l 2.992188,-1.746094 c 0.226407,-0.130619 0.365234,-0.372333 0.365234,-0.632812 V 15 13.251953 7.2304687 c 0,-0.259166 -0.137844,-0.4985916 -0.359375,-0.6289062 L 22.105469,5.84375 c -0.07993,-0.045675 -0.172152,-0.072266 -0.261719,-0.072266 z m 0,0.4570312 c 0.0099,0 0.01713,8.972e-4 0.0332,0.00977 l 1.302734,0.7578125 c 0.08446,0.049685 0.134766,0.1375414 0.134766,0.234375 V 13.251953 15 16.748047 c 0,0.09752 -0.05308,0.188901 -0.138672,0.238281 l -2.99414,1.746094 h -0.002 c -0.04128,0.02435 -0.08734,0.03711 -0.136718,0.03711 -0.04938,0 -0.09739,-0.01276 -0.138672,-0.03711 l -2.996094,-1.746094 c -0.08623,-0.04975 -0.138672,-0.139306 -0.138672,-0.238281 v -3.496094 c 0,-0.09752 0.05308,-0.188901 0.138672,-0.238281 l 2.996094,-1.746094 c 0.04128,-0.02435 0.08929,-0.03711 0.138672,-0.03711 0.04938,0 0.09544,0.01276 0.136718,0.03711 h 0.002 l 1.58789,0.925781 V 6.3007812 c 0,-0.050116 0.03899,-0.072266 0.07422,-0.072266 z m -9.800781,4.5449224 c -0.127348,0 -0.255596,0.0338 -0.369141,0.09961 L 8.6796875,12.619141 C 8.4532808,12.74976 8.3144531,12.991474 8.3144531,13.251953 v 3.496094 c 0,0.261027 0.1394608,0.502558 0.3652344,0.632812 l 2.9941405,1.746094 c 0.227433,0.131824 0.508895,0.131824 0.736328,0 l 2.994141,-1.746094 c 0.226407,-0.130619 0.365234,-0.372333 0.365234,-0.632812 v -3.496094 c 0,-0.261024 -0.139456,-0.502558 -0.365234,-0.632812 l -2.994141,-1.746094 c -0.113544,-0.06581 -0.239839,-0.09961 -0.367187,-0.09961 z m 16,0 c -0.126622,0 -0.256377,0.03195 -0.371094,0.09961 l -2.992188,1.746094 c -0.226406,0.130619 -0.365234,0.372333 -0.365234,0.632812 v 3.496094 c 0,0.261024 0.139457,0.502558 0.365234,0.632812 l 2.900391,1.753907 c 0.227819,0.138736 0.512849,0.139412 0.742188,0.0059 L 29.75,18.310547 c 0.291412,-0.167365 0.292401,-0.61166 0.002,-0.78125 L 26.769531,15.773438 V 14.240234 L 28.042969,13.5 l 1.271484,0.740234 v 1.119141 c 0,0.147383 0.08928,0.305208 0.21875,0.361328 0.129471,0.05612 0.256319,0.0321 0.359375,-0.0293 v 0.002 c 0.375818,-0.220718 1.515625,-0.882812 1.515625,-0.882812 0.223163,-0.129814 0.361328,-0.369743 0.361328,-0.628906 v -0.929688 c 0,-0.261024 -0.139456,-0.502558 -0.365234,-0.632812 l -2.994141,-1.746094 c -0.11407,-0.06642 -0.240566,-0.09961 -0.367187,-0.09961 z m -24.2285159,0.002 v 0.06055 c -0.047305,0.01574 -0.098441,0.01303 -0.1425781,0.03906 l -2.9921875,1.744141 c -0.22540568,0.131486 -0.36523437,0.373738 -0.36523437,0.634765 v 4.462891 c -1e-8,0.38243 0.43530582,0.632921 0.76562497,0.441406 l 1.3300782,-0.773437 c 0.2215352,-0.130315 0.359375,-0.369743 0.359375,-0.628907 v -2.511718 l 1.2734374,-0.742188 1.2714844,0.742188 v 2.511718 c 0,0.259164 0.139793,0.498592 0.3613281,0.628907 l 1.328125,0.773437 c 0.3305064,0.193382 0.765625,-0.05898 0.765625,-0.441406 v -4.462891 c 0,-0.261026 -0.1378754,-0.503279 -0.3632812,-0.634765 h -0.00195 L 4.4121094,10.875 h -0.00195 C 4.295871,10.808027 4.168966,10.775391 4.0429687,10.775391 Z m 8.2285159,0.455078 c 0.04815,0 0.09522,0.01192 0.138672,0.03711 l 2.99414,1.746094 c 0.08623,0.04975 0.138672,0.139306 0.138672,0.238281 v 3.496094 c 0,0.09752 -0.05308,0.188901 -0.138672,0.238281 l -2.99414,1.746094 c -0.08596,0.04983 -0.191115,0.04913 -0.277344,0 h -0.002 L 8.9082031,16.986328 C 8.8219769,16.936582 8.7695312,16.84702 8.7695313,16.748047 v -3.496094 c 0,-0.09752 0.053079,-0.188901 0.1386718,-0.238281 l 2.9941409,-1.746094 c 0.04345,-0.02519 0.09247,-0.03711 0.140625,-0.03711 z m 16,0 c 0.04939,0 0.09475,0.01153 0.138672,0.03711 l 2.99414,1.746094 c 0.08623,0.04975 0.138672,0.139306 0.138672,0.238281 v 0.929688 c 0,0.09684 -0.05193,0.186189 -0.134766,0.234375 0,0 -0.96596,0.560471 -1.410156,0.820312 v -1.257812 l -1.726562,-1.00586 -1.728516,1.00586 v 2.05664 l 3.201172,1.884766 -1.421875,0.826172 c -0.08666,0.05047 -0.193163,0.04931 -0.277344,-0.002 l -2.90625,-1.757813 h -0.002 c -0.08623,-0.04975 -0.138672,-0.139306 -0.138672,-0.238281 v -3.496094 c 0,-0.09752 0.05308,-0.188901 0.138672,-0.238281 l 2.996094,-1.746094 c 0.04128,-0.02435 0.08929,-0.03711 0.138672,-0.03711 z m -24.0000003,0.002 c 0.049378,0 0.095436,0.01276 0.1367188,0.03711 h 0.00195 l 2.9941406,1.744141 c 0.086594,0.05051 0.1386719,0.141261 0.1386719,0.240234 v 4.462891 c 0,0.05357 -0.034585,0.07349 -0.080078,0.04687 L 5.90625,16.990234 C 5.8217856,16.940549 5.7695313,16.852696 5.7695312,16.755859 V 13.982422 L 4.0429687,12.974609 2.3144531,13.982422 v 2.773437 c 0,0.09684 -0.050301,0.18469 -0.1347656,0.234375 l -1.328125,0.773438 c -0.0456804,0.02649 -0.0820313,0.0067 -0.0820313,-0.04687 v -4.462891 c 0,-0.09897 0.054031,-0.189721 0.140625,-0.240234 L 3.9042969,11.269531 c 0.041282,-0.02435 0.089294,-0.03711 0.1386718,-0.03711 z m 16.0000003,1.740234 -0.115235,0.06641 -1.613281,0.941406 v 2.039062 l 1.728516,1.007813 1.726562,-1.007813 V 15 13.980469 Z m 0,0.527344 1.271484,0.742188 V 15 15.757813 L 20.042969,16.5 18.769531,15.757813 v -1.515625 z m 8,0.240234 -0.115235,0.06641 -0.970703,0.566406 v 1.259766 l 1.085938,0.630859 1.083984,-0.630859 v -1.259766 z m 0,0.527344 0.628906,0.367188 v 0.736328 l -0.628906,0.365234 -0.63086,-0.365234 v -0.736328 z m -12.294922,3.501953 -0.0059,0.05273 c -0.06823,0.01742 -0.139919,0.01692 -0.203125,0.05273 v 0.002 L 12.728516,19.5 c -0.261717,0.144298 -0.414063,0.420574 -0.414063,0.710937 v 3.246094 c 0,0.294 0.159105,0.562294 0.408203,0.708985 h 0.002 l 0.748047,0.425781 0.0059,0.0039 c 0.374631,0.184678 0.586309,0.199219 0.748047,0.199219 0.310449,0 0.588591,-0.100013 0.779296,-0.300781 0.190705,-0.200769 0.279297,-0.483698 0.279297,-0.804688 v -0.818359 c 0.0556,0.13622 0.03694,0.279641 0.16211,0.394531 0.273969,0.251471 0.710939,0.402344 1.361328,0.402344 0.480896,-5.33e-4 0.87851,-0.09129 1.173828,-0.292969 0.295318,-0.201676 0.466797,-0.530132 0.466797,-0.900391 0,-0.355173 -0.152457,-0.653869 -0.419922,-0.820312 -0.03027,-0.01884 -0.0869,-0.01681 -0.119141,-0.0332 h 0.117188 c 0.08353,0 0.161755,-0.03464 0.21875,-0.0918 l 0.0098,-0.0078 0.0078,-0.01172 c 0.0311,-0.03939 0.07369,-0.1376 0.06055,-0.236329 -0.03634,-0.375024 -0.1893,-0.699355 -0.472657,-0.898437 -0.287748,-0.202168 -0.671588,-0.28125 -1.148437,-0.28125 h -0.701172 l 0.1875,0.136719 c -0.189554,0.04655 -0.418303,0.04728 -0.560547,0.148437 -0.216211,0.15376 -0.292382,0.413791 -0.34375,0.673828 v -0.570312 c 0,-0.166971 -0.143754,-0.3125 -0.308593,-0.3125 h -0.355469 c -0.17302,0 -0.3125,0.14766 -0.3125,0.3125 v 3.207031 c 0,0.04119 -0.02362,0.08886 -0.06641,0.113281 -0.04249,0.02426 -0.11913,0.0449 -0.277344,-0.0332 h -0.002 l -0.6875,-0.396484 v -3.085938 l 2.671875,-1.539062 2.673828,1.539062 v 3.089844 l -2.673828,1.542969 -0.650391,-0.386719 -0.0059,-0.002 c -0.0751,-0.03952 -0.141222,-0.07926 -0.28125,-0.0059 l -0.0039,0.002 -0.0039,0.002 c -0.195034,0.114669 -0.199031,0.115149 -0.382812,0.177734 -0.01824,0.0056 -0.04097,0.01256 -0.07422,0.03125 -0.03685,0.02071 -0.103378,0.06004 -0.130859,0.16211 -0.02748,0.102069 0.02495,0.202703 0.06641,0.248046 0.03962,0.04334 0.0765,0.0669 0.121094,0.0918 l 0.0039,0.002 c 8.09e-4,4.5e-4 0.0011,0.0015 0.002,0.002 l 0.933594,0.554687 0.0039,0.002 c 0.120781,0.06364 0.258887,0.105469 0.404297,0.105469 0.148238,0 0.292103,-0.03905 0.416015,-0.119141 l 2.798828,-1.61914 c 0.261717,-0.144298 0.414063,-0.420574 0.414063,-0.710938 v -3.246094 c 0,-0.293999 -0.160493,-0.559781 -0.408203,-0.707031 v -0.002 l -2.814453,-1.625 c -0.126292,-0.07361 -0.266186,-0.107422 -0.40625,-0.107422 z m 0.201172,0.457031 c 0.06569,0 0.129026,0.01653 0.177734,0.04492 l 2.8125,1.625 c 0.110902,0.0671 0.183594,0.191357 0.183594,0.314453 v 3.246094 c 0,0.127636 -0.0714,0.252798 -0.179688,0.3125 h -0.002 l -2.818359,1.63086 -0.0059,0.0039 c -0.04009,0.02591 -0.102207,0.04492 -0.167968,0.04492 -0.05859,0 -0.126188,-0.01642 -0.191406,-0.05078 l -0.679688,-0.404296 c 0.01805,-0.0093 0.03859,-0.01441 0.05859,-0.02539 l 0.646484,0.384766 c 0.117872,0.07367 0.211721,0.07062 0.326172,0.002 l 2.814453,-1.626953 0.0039,-0.002 c 0.09061,-0.05667 0.148438,-0.152677 0.148438,-0.271484 v -3.246094 c 0,-0.09644 -0.0566,-0.224656 -0.166016,-0.28125 l -2.796875,-1.611328 c -6.6e-4,-4.13e-4 -0.0013,4.07e-4 -0.002,0 -0.105236,-0.06477 -0.219685,-0.0552 -0.310547,-0.0098 l -0.0059,0.002 -2.808594,1.61914 c -0.127719,0.06611 -0.166016,0.179028 -0.166015,0.28125 v 3.246094 c -1e-6,0.123188 0.05478,0.209822 0.154296,0.269531 l 0.002,0.002 0.77539,0.447266 0.0078,0.002 c 0.258537,0.12896 0.518625,0.132115 0.708984,0.02344 0.190359,-0.108677 0.294922,-0.307956 0.294922,-0.509766 v -3.0625 h 0.06641 v 3.0625 c 0,0.23901 -0.06149,0.39448 -0.154297,0.492188 -0.09281,0.09771 -0.229669,0.15625 -0.449218,0.15625 -0.160263,0 -0.211508,0.01298 -0.546875,-0.152344 l -0.728516,-0.414063 h 0.0039 c -0.110902,-0.06531 -0.185547,-0.190453 -0.185547,-0.314453 v -3.246094 c 0,-0.127636 0.0714,-0.252797 0.179688,-0.3125 h 0.002 l 2.8125,-1.625 c 0.05245,-0.02972 0.119861,-0.04687 0.185547,-0.04687 z m 4.384765,1.042969 C 20.21099,19.270043 20.20862,19.44561 20.103516,19.5 h -0.199219 v 0.199219 c -0.111305,0.131985 -0.335938,0.146956 -0.335938,0.335937 0,0.183969 0.22646,0.202766 0.335938,0.335938 v 0.193359 h 0.191406 c 0.108684,0.05962 0.108363,0.240234 0.240234,0.240234 0.130431,0 0.128495,-0.179869 0.236329,-0.238281 h 0.359375 l -0.117188,-0.242187 c 0.08305,-0.12291 0.287109,-0.131097 0.287109,-0.289063 0,-0.428232 -0.351417,-0.770974 -0.767578,-0.765625 z m 0.02539,0.570313 c 0.0037,7.08e-4 0.0042,0.005 0.0078,0.0059 l 0.002,0.02539 c -0.0029,-1.32e-4 -0.0071,-0.0039 -0.0098,-0.0039 z m -3.65625,0.710937 c 0.424151,0 0.711093,0.0772 0.884766,0.199219 0.124724,0.08763 0.161616,0.251703 0.207031,0.414062 h -0.0625 c -0.0626,-0.170856 -0.132938,-0.342324 -0.289063,-0.433593 -0.197508,-0.115463 -0.434113,-0.144532 -0.740234,-0.144532 -0.349645,0 -0.579721,0.05521 -0.742187,0.181641 -0.162467,0.126429 -0.205079,0.322377 -0.205079,0.439453 0,0.06736 0.0069,0.159165 0.06055,0.248047 0.05365,0.08888 0.140967,0.14724 0.232422,0.185547 0.18291,0.07662 0.425196,0.114795 0.867188,0.173828 0.423911,0.05727 0.719317,0.130897 0.873046,0.226563 0.15373,0.09567 0.205079,0.180768 0.205079,0.433593 0,0.243742 -0.08357,0.396442 -0.269532,0.523438 -0.03167,0.02163 -0.117481,0.01616 -0.15625,0.03516 0.194543,-0.10512 0.320313,-0.322145 0.320313,-0.539062 0,-0.06024 -0.0056,-0.147145 -0.05273,-0.234375 -0.0471,-0.08723 -0.128079,-0.157399 -0.222656,-0.205079 -0.189153,-0.09536 -0.451696,-0.144388 -0.921875,-0.191406 -0.373119,-0.03785 -0.656832,-0.102193 -0.816406,-0.197265 -0.159574,-0.09507 -0.224609,-0.187172 -0.224609,-0.4375 0,-0.217818 0.07788,-0.360278 0.24414,-0.478516 0.166262,-0.118238 0.439487,-0.199219 0.808594,-0.199219 z m 0,0.492188 c 0.272879,0 0.432618,0.03498 0.509766,0.08008 0.07715,0.0451 0.114066,0.09724 0.15039,0.257812 v 0.002 l 0.002,0.0039 c 0.0159,0.062 0.100685,0.08168 0.16211,0.126953 -0.18032,-0.04799 -0.319586,-0.121109 -0.550782,-0.152344 -0.434007,-0.05797 -0.672417,-0.10731 -0.751953,-0.140625 -0.03977,-0.01666 -0.02756,-0.01849 -0.01758,-0.002 0.01,0.01653 0.0039,0.02342 0.0039,-0.01172 0,-0.05292 -0.0059,-0.05272 0.0293,-0.08008 0.03516,-0.02736 0.165536,-0.08398 0.462891,-0.08398 z m 1.099609,0.226562 c 4.1e-4,0.0011 0.0036,0.0028 0.0039,0.0039 l 0.002,0.0059 c -8.92e-4,-0.0039 -0.0049,-0.0058 -0.0059,-0.0098 z m -2.517578,0.126953 c 0.0539,0.268948 0.139193,0.531302 0.355469,0.660157 0.03426,0.02041 0.09058,0.01594 0.126953,0.0332 0.25158,0.119392 0.533031,0.19148 0.878906,0.226562 0.44982,0.04498 0.684778,0.107696 0.761719,0.146485 0.03847,0.01939 0.03216,0.0226 0.02734,0.01367 -0.0048,-0.0089 -0.002,-0.01218 -0.002,0.01758 0,0.09699 -0.0026,0.0999 -0.08008,0.140625 -0.07752,0.04072 -0.258858,0.07813 -0.539063,0.07813 -0.353659,0 -0.539304,-0.05174 -0.615234,-0.101563 -0.07593,-0.04982 -0.100024,-0.100065 -0.123047,-0.257812 v 0.0039 c -0.02023,-0.157761 -0.163169,-0.267578 -0.308594,-0.267578 h -0.365234 c -0.06201,0 -0.06742,0.0827 -0.117188,0.117187 z m 0.31836,1.150391 h 0.0918 c 0.0439,0.160406 0.09251,0.32637 0.242187,0.431641 -0.03739,-0.02415 -0.153605,-0.02309 -0.181641,-0.04883 -0.117972,-0.108284 -0.130148,-0.247034 -0.152343,-0.382812 z m 0.550781,0.488281 c 0.182091,0.07094 0.362161,0.134766 0.660156,0.134766 0.283698,0 0.493116,-0.03806 0.679688,-0.119141 -0.185126,0.07735 -0.369561,0.159807 -0.685547,0.160156 -0.360997,0 -0.473375,-0.101216 -0.654297,-0.175781 z"
       id="path950" />
  </g>
  <script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
